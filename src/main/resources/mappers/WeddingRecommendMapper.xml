<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mk.onevone.dao.WeddingRecommendDAO">
  <resultMap id="BaseResultMap" type="com.mk.onevone.entity.WeddingRecommend">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    id, person_id, group_id, type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wedding_recommend
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findList" resultType="com.mk.onevone.entity.WeddingGroup">
    select
    <include refid="Base_Column_List" />
    from wedding_recommend
    <where>
      <if test="personId != null">
        AND person_id = #{personId,jdbcType=INTEGER}
      </if>
      <if test="groupId != null">
        AND group_id = #{groupId,jdbcType=INTEGER}
      </if>
      <if test="type != null">
        AND `type` = #{type,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="findRecommendByPerson" resultType="com.mk.onevone.entity.WeddingPersonal">
    select wp.id, wp.name, wp.type, wp.group_id, wp.sex, wp.city, wp.in_short, wp.introduce, wp.video_url, wp.photo_url
    from wedding_personal wp
    where EXISTS (select * from wedding_recommend wr where wr.person_id = wp.id)
  </select>
  <select id="findRecommendByGroup" resultMap="BaseResultMap">
    select wp.id, wp.name, wp.type, wp.photo_url
    from wedding_group wp
    where EXISTS (select * from wedding_recommend wr where wr.group_id = wp.id)
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wedding_recommend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mk.onevone.entity.WeddingRecommend">
    insert into wedding_recommend (id, person_id, group_id, 
      type)
    values (#{id,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mk.onevone.entity.WeddingRecommend">
    insert into wedding_recommend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mk.onevone.entity.WeddingRecommend">
    update wedding_recommend
    <set>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mk.onevone.entity.WeddingRecommend">
    update wedding_recommend
    set person_id = #{personId,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>